apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployments.app.name }}
  labels:
    {{- with .Values.deployments.app.labels }}
      {{- toYaml . | nindent 4}}
    {{- end }}
spec:
  replicas: {{ .Values.deployments.app.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
  {{- with .Values.deployments.app.labels }}
    matchLabels:
        {{- toYaml . | nindent 6}}
  {{- end }}
  template:
    metadata:
      annotations:
    {{- with .Values.deployments.app.labels }}
      labels:
          {{- toYaml . | nindent 8}}
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}  
      containers:
        - name: {{ .Values.deployments.app.name }}
          image: "{{ .Values.images.app.image }}:{{ .Values.images.app.tag }}"
          imagePullPolicy: {{ .Values.images.app.pullPolicy }}
          terminationMessagePolicy: FallbackToLogsOnError 
          readinessProbe:
             {{- toYaml .Values.deployments.app.readinessProbe | nindent 16 }}
          livenessProbe:
            {{- toYaml .Values.deployments.app.livenessProbe | nindent 16 }} 
          ports:
            - containerPort: {{ .Values.deployments.app.port }}
              name: app-port
              protocol: TCP
          envFrom:
          - configMapRef:
              name: app
          resources:
            {{- toYaml .Values.deployments.app.resources | nindent 16 }}  



     
